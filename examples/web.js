// Generated by CoffeeScript 1.3.3
(function() {
  var async, configureExpress, configureLogging, configureRestless, createExpress, express, namespace, processSeriesResult, restless, startExpress, winston;

  namespace = require('require-namespace');

  express = require('express');

  async = require('async');

  winston = require('winston');

  restless = require('../index');

  createExpress = function(done) {
    winston.info("Creating express.");
    global.app = express(express.cookieParser(), express.bodyParser(), express.session({
      secret: 'A secretie valUe'
    }), express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
    return done();
  };

  configureExpress = function(done) {
    winston.info("Configuring express.");
    app.configure('development', function() {
      app.use(express.errorHandler({
        dumpExceptions: true,
        showStack: true
      }));
      return app.use(express["static"](__dirname + '/public'));
    });
    return done();
  };

  startExpress = function(done) {
    var port;
    winston.info("Express is now starting.");
    port = process.env.PORT || 3050;
    return app.listen(port, function() {
      winston.info("Express server listening on port " + port + " in " + app.settings.env + " mode.");
      return done();
    });
  };

  configureLogging = function(done) {
    winston.handleExceptions();
    return done();
  };

  configureRestless = function(done) {
    var directory;
    directory = __dirname + '/resources';
    winston.info("Configuring restless for " + directory + ".");
    return restless.configureResourcesInDirectory(directory, done);
  };

  processSeriesResult = function(err) {
    if (err) {
      return winston.error(err.toString());
    }
  };

  async.series([configureLogging, createExpress, configureExpress, configureRestless, startExpress], processSeriesResult);

}).call(this);
